n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A-data-stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin-stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout-stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
model_version4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr16  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin10  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr513  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr614  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr715  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr916  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1118  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1219  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1420  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1521  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1622  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1723  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1824  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1925  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2026  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A-data-stat1[0x0000000B] @ (A-data-stat1[0x0000000A] @ (A-data-stat1[0x00000009] @ A-data-stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A-data-stat1[0x0000003F] @ (A-data-stat1[0x0000003E] @ (A-data-stat1[0x0000003D] @ (A-data-stat1[0x0000003C] @ (A-data-stat1[0x0000003B] @ (A-data-stat1[0x0000003A] @ (A-data-stat1[0x00000039] @ A-data-stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin-stat2[0x0000000B] @ (stdin-stat2[0x0000000A] @ (stdin-stat2[0x00000009] @ stdin-stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin-stat2[0x0000003F] @ (stdin-stat2[0x0000003E] @ (stdin-stat2[0x0000003D] @ (stdin-stat2[0x0000003C] @ (stdin-stat2[0x0000003B] @ (stdin-stat2[0x0000003A] @ (stdin-stat2[0x00000039] @ stdin-stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout-stat3[0x0000000B] @ (stdout-stat3[0x0000000A] @ (stdout-stat3[0x00000009] @ stdout-stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout-stat3[0x0000003F] @ (stdout-stat3[0x0000003E] @ (stdout-stat3[0x0000003D] @ (stdout-stat3[0x0000003C] @ (stdout-stat3[0x0000003B] @ (stdout-stat3[0x0000003A] @ (stdout-stat3[0x00000039] @ stdout-stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ((((0x01 = model_version4[0x00000000]
) AND (0x00 = model_version4[0x00000001]
)
) AND (0x00 = model_version4[0x00000002]
)
) AND (0x00 = model_version4[0x00000003]
)
) );
ASSERT( (0x00 = arg005[0x00000001]
) );
ASSERT( (0x41 = arg005[0x00000000]
) );
ASSERT( (LET let_k_0 = ((((((((((((((((((((((((const_arr715 WITH [0x00000000] := 0x08)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [0x00000006] := 0xAB)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0x98)
 WITH [0x00000009] := 0x3C)
 WITH [0x0000000A] := 0x77)
 WITH [0x0000000B] := 0x3B)
 WITH [0x0000000C] := 0x54)
 WITH [0x0000000D] := 0x56)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x90)
 WITH [0x00000011] := 0xC9)
 WITH [0x00000012] := 0x8A)
 WITH [0x00000013] := 0x39)
 WITH [0x00000014] := 0x54)
 WITH [0x00000015] := 0x56)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
,
let_k_1 = BVPLUS(64, 
0xFFFFA9ABC4816C30, 
IF(((((((((0x00 = A-data-stat1[0x00000008]
) AND (0x00 = A-data-stat1[0x00000009]
)
) AND (0x00 = A-data-stat1[0x0000000A]
)
) AND (0x00 = A-data-stat1[0x0000000B]
)
) AND (0x00 = A-data-stat1[0x0000000C]
)
) AND (0x00 = A-data-stat1[0x0000000D]
)
) AND (0x00 = A-data-stat1[0x0000000E]
)
) AND (0x00 = A-data-stat1[0x0000000F]
)
))
THEN 0x0000000000000000
ELSE 0x000056543B7E93E0
ENDIF)
[31:0] IN 
( NOT( (0x2 = ((((((((((((((((A-data-stat1 WITH [0x00000030] := 0x08)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000040] := 0x08)
 WITH [0x00000041] := 0x00)
 WITH [0x00000042] := 0x00)
 WITH [0x00000043] := 0x00)
 WITH [0x00000044] := 0x00)
 WITH [0x00000045] := 0x00)
 WITH [0x00000046] := 0x00)
 WITH [0x00000047] := 0x00)
[BVPLUS(32, 
0x00000001, 
BVPLUS(64, 
0xFFFFA9ABC6753688, 
(let_k_0[BVPLUS(32, 
0x00000007, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000006, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000005, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000004, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
] @ let_k_0[let_k_1]
)
)
)
)
)
)
))
[31:0])
][7:4]
))))  );
%----------------------------------------------------
QUERY( FALSE  );
