n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A-data-stat1  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin-stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout-stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
model_version4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin8  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr19  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr210  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr311  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr412  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr513  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr614  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr715  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr816  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr917  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1018  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1119  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1220  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1321  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1422  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1523  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1624  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1725  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1826  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1927  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2028  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2129  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2230  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2331  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2432  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2533  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2634  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2735  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2836  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2937  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3038  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3139  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3240  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3341  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3442  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3543  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3644  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3745  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3846  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3947  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4048  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4149  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4250  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4351  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4452  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4553  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4654  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4755  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4856  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4957  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5058  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5159  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5260  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5361  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5462  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5563  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5664  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5765  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5866  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5967  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6068  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6169  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6270  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6371  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6472  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6573  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6674  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6775  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6876  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6977  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7078  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7179  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7280  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7381  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7482  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7583  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7684  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7785  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7886  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7987  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8088  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8189  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8290  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8391  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8492  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8593  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8694  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8795  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8896  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8997  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9098  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9199  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr92100  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr93101  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr94102  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr95103  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000004,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
))) );
ASSERT( ( NOT( ((((0x02 = n_args0[0x00000000]
) AND (0x00 = n_args0[0x00000001]
)
) AND (0x00 = n_args0[0x00000002]
)
) AND (0x00 = n_args0[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A-data-stat1[0x0000000B] @ (A-data-stat1[0x0000000A] @ (A-data-stat1[0x00000009] @ A-data-stat1[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A-data-stat1[0x0000003F] @ (A-data-stat1[0x0000003E] @ (A-data-stat1[0x0000003D] @ (A-data-stat1[0x0000003C] @ (A-data-stat1[0x0000003B] @ (A-data-stat1[0x0000003A] @ (A-data-stat1[0x00000039] @ A-data-stat1[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin-stat2[0x0000000B] @ (stdin-stat2[0x0000000A] @ (stdin-stat2[0x00000009] @ stdin-stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin-stat2[0x0000003F] @ (stdin-stat2[0x0000003E] @ (stdin-stat2[0x0000003D] @ (stdin-stat2[0x0000003C] @ (stdin-stat2[0x0000003B] @ (stdin-stat2[0x0000003A] @ (stdin-stat2[0x00000039] @ stdin-stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout-stat3[0x0000000B] @ (stdout-stat3[0x0000000A] @ (stdout-stat3[0x00000009] @ stdout-stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout-stat3[0x0000003F] @ (stdout-stat3[0x0000003E] @ (stdout-stat3[0x0000003D] @ (stdout-stat3[0x0000003C] @ (stdout-stat3[0x0000003B] @ (stdout-stat3[0x0000003A] @ (stdout-stat3[0x00000039] @ stdout-stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ((((0x01 = model_version4[0x00000000]
) AND (0x00 = model_version4[0x00000001]
)
) AND (0x00 = model_version4[0x00000002]
)
) AND (0x00 = model_version4[0x00000003]
)
) );
ASSERT( (0x2D = arg005[0x00000000]
) );
ASSERT( (0x2D = arg005[0x00000001]
) );
ASSERT( (0x00 = arg005[0x00000009]
) );
ASSERT( (0x69 = arg005[0x00000002]
) );
ASSERT( (0x67 = arg005[0x00000003]
) );
ASSERT( (0x6E = arg005[0x00000004]
) );
ASSERT( (0x6F = arg005[0x00000005]
) );
ASSERT( (0x72 = arg005[0x00000006]
) );
ASSERT( (0x65 = arg005[0x00000007]
) );
ASSERT( (0x2D = arg005[0x00000008]
) );
ASSERT( (0x2D = arg016[0x00000000]
) );
ASSERT( (0x2D = arg016[0x00000001]
) );
ASSERT( (0x00 = arg016[0x00000009]
) );
ASSERT( (0x69 = arg016[0x00000002]
) );
ASSERT( (0x67 = arg016[0x00000003]
) );
ASSERT( (0x6E = arg016[0x00000004]
) );
ASSERT( (0x6F = arg016[0x00000005]
) );
ASSERT( (0x72 = arg016[0x00000006]
) );
ASSERT( (0x65 = arg016[0x00000007]
) );
ASSERT( (0x2D = arg016[0x00000008]
) );
ASSERT( (0x2D = arg027[0x00000000]
) );
ASSERT( (0x2D = arg027[0x00000001]
) );
ASSERT( (0x00 = arg027[0x00000007]
) );
ASSERT( (0x63 = arg027[0x00000002]
) );
ASSERT( (0x68 = arg027[0x00000003]
) );
ASSERT( (0x65 = arg027[0x00000004]
) );
ASSERT( (0x63 = arg027[0x00000005]
) );
ASSERT( (0x6B = arg027[0x00000006]
) );
ASSERT( (0x0A = stdin8[0x00000000]
) );
ASSERT( (0x0A = stdin8[0x00000001]
) );
ASSERT( ( NOT( (0x0A = stdin8[0x00000002]
))) );
ASSERT( ( NOT( (0x0A = stdin8[0x00000003]
))) );
ASSERT( ( NOT( (0x0A = stdin8[0x00000004]
))) );
ASSERT( ( NOT( (0x0A = stdin8[0x00000005]
))) );
ASSERT( ( NOT( (0x0A = stdin8[0x00000006]
))) );
ASSERT( ( NOT( (0x0A = stdin8[0x00000007]
))) );
ASSERT( ( NOT( (0x23 = stdin8[0x00000002]
))) );
ASSERT( ( NOT( (0x20 = stdin8[0x00000002]
))) );
ASSERT( ( NOT( (0x09 = stdin8[0x00000002]
))) );
ASSERT( (LET let_k_0 = stdin8[0x00000002] IN 
(0x53 = ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((const_arr95103 WITH [0x00000000] := 0x00)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0x00)
 WITH [0x00000008] := 0x00)
 WITH [0x00000009] := 0x00)
 WITH [0x0000000A] := 0x00)
 WITH [0x0000000B] := 0x00)
 WITH [0x0000000C] := 0x00)
 WITH [0x0000000D] := 0x00)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x00)
 WITH [0x00000011] := 0x00)
 WITH [0x00000012] := 0x00)
 WITH [0x00000013] := 0x00)
 WITH [0x00000014] := 0x00)
 WITH [0x00000015] := 0x00)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
 WITH [0x00000018] := 0x00)
 WITH [0x00000019] := 0x00)
 WITH [0x0000001A] := 0x00)
 WITH [0x0000001B] := 0x00)
 WITH [0x0000001C] := 0x00)
 WITH [0x0000001D] := 0x00)
 WITH [0x0000001E] := 0x00)
 WITH [0x0000001F] := 0x00)
 WITH [0x00000020] := 0x00)
 WITH [0x00000021] := 0x00)
 WITH [0x00000022] := 0x00)
 WITH [0x00000023] := 0x00)
 WITH [0x00000024] := 0x00)
 WITH [0x00000025] := 0x00)
 WITH [0x00000026] := 0x00)
 WITH [0x00000027] := 0x00)
 WITH [0x00000028] := 0x00)
 WITH [0x00000029] := 0x00)
 WITH [0x0000002A] := 0x00)
 WITH [0x0000002B] := 0x00)
 WITH [0x0000002C] := 0x00)
 WITH [0x0000002D] := 0x00)
 WITH [0x0000002E] := 0x00)
 WITH [0x0000002F] := 0x00)
 WITH [0x00000030] := 0x00)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000038] := 0x00)
 WITH [0x00000039] := 0x00)
 WITH [0x0000003A] := 0x00)
 WITH [0x0000003B] := 0x00)
 WITH [0x0000003C] := 0x00)
 WITH [0x0000003D] := 0x00)
 WITH [0x0000003E] := 0x00)
 WITH [0x0000003F] := 0x00)
 WITH [0x00000000] := let_k_0)
 WITH [0x00000001] := stdin8[0x00000003])
 WITH [0x00000002] := stdin8[0x00000004])
 WITH [0x00000003] := stdin8[0x00000005])
 WITH [0x00000004] := stdin8[0x00000006])
 WITH [0x00000005] := stdin8[0x00000007])
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0xAB)
 WITH [0x00000009] := 0xAB)
 WITH [0x0000000A] := 0xAB)
 WITH [0x0000000B] := 0xAB)
 WITH [0x0000000C] := 0xAB)
 WITH [0x0000000D] := 0xAB)
 WITH [0x0000000E] := 0xAB)
 WITH [0x0000000F] := 0xAB)
 WITH [0x00000010] := 0xAB)
 WITH [0x00000011] := 0xAB)
 WITH [0x00000012] := 0xAB)
 WITH [0x00000013] := 0xAB)
 WITH [0x00000014] := 0xAB)
 WITH [0x00000015] := 0xAB)
 WITH [0x00000016] := 0xAB)
 WITH [0x00000017] := 0xAB)
 WITH [0x00000018] := 0xAB)
 WITH [0x00000019] := 0xAB)
 WITH [0x0000001A] := 0xAB)
 WITH [0x0000001B] := 0xAB)
 WITH [0x0000001C] := 0xAB)
 WITH [0x0000001D] := 0xAB)
 WITH [0x0000001E] := 0xAB)
 WITH [0x0000001F] := 0xAB)
 WITH [0x00000020] := 0xAB)
 WITH [0x00000021] := 0xAB)
 WITH [0x00000022] := 0xAB)
 WITH [0x00000023] := 0xAB)
 WITH [0x00000024] := 0xAB)
 WITH [0x00000025] := 0xAB)
 WITH [0x00000026] := 0xAB)
 WITH [0x00000027] := 0xAB)
 WITH [0x00000028] := 0xAB)
 WITH [0x00000029] := 0xAB)
 WITH [0x0000002A] := 0xAB)
 WITH [0x0000002B] := 0xAB)
 WITH [0x0000002C] := 0xAB)
 WITH [0x0000002D] := 0xAB)
 WITH [0x0000002E] := 0xAB)
 WITH [0x0000002F] := 0xAB)
 WITH [0x00000030] := 0xAB)
 WITH [0x00000031] := 0xAB)
 WITH [0x00000032] := 0xAB)
 WITH [0x00000033] := 0xAB)
 WITH [0x00000034] := 0xAB)
 WITH [0x00000035] := 0xAB)
 WITH [0x00000036] := 0xAB)
 WITH [0x00000037] := 0xAB)
 WITH [0x00000038] := 0xAB)
 WITH [0x00000039] := 0xAB)
 WITH [0x0000003A] := 0xAB)
 WITH [0x0000003B] := 0xAB)
 WITH [0x0000003C] := 0xAB)
 WITH [0x0000003D] := 0xAB)
 WITH [0x0000003E] := 0xAB)
 WITH [0x0000003F] := 0xAB)
[IF((0x5C = let_k_0
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF[31:0]]
))  );
ASSERT( (LET let_k_0 = stdin8[0x00000002] IN 
(0x48 = ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((const_arr95103 WITH [0x00000000] := 0x00)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0x00)
 WITH [0x00000008] := 0x00)
 WITH [0x00000009] := 0x00)
 WITH [0x0000000A] := 0x00)
 WITH [0x0000000B] := 0x00)
 WITH [0x0000000C] := 0x00)
 WITH [0x0000000D] := 0x00)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x00)
 WITH [0x00000011] := 0x00)
 WITH [0x00000012] := 0x00)
 WITH [0x00000013] := 0x00)
 WITH [0x00000014] := 0x00)
 WITH [0x00000015] := 0x00)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
 WITH [0x00000018] := 0x00)
 WITH [0x00000019] := 0x00)
 WITH [0x0000001A] := 0x00)
 WITH [0x0000001B] := 0x00)
 WITH [0x0000001C] := 0x00)
 WITH [0x0000001D] := 0x00)
 WITH [0x0000001E] := 0x00)
 WITH [0x0000001F] := 0x00)
 WITH [0x00000020] := 0x00)
 WITH [0x00000021] := 0x00)
 WITH [0x00000022] := 0x00)
 WITH [0x00000023] := 0x00)
 WITH [0x00000024] := 0x00)
 WITH [0x00000025] := 0x00)
 WITH [0x00000026] := 0x00)
 WITH [0x00000027] := 0x00)
 WITH [0x00000028] := 0x00)
 WITH [0x00000029] := 0x00)
 WITH [0x0000002A] := 0x00)
 WITH [0x0000002B] := 0x00)
 WITH [0x0000002C] := 0x00)
 WITH [0x0000002D] := 0x00)
 WITH [0x0000002E] := 0x00)
 WITH [0x0000002F] := 0x00)
 WITH [0x00000030] := 0x00)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000038] := 0x00)
 WITH [0x00000039] := 0x00)
 WITH [0x0000003A] := 0x00)
 WITH [0x0000003B] := 0x00)
 WITH [0x0000003C] := 0x00)
 WITH [0x0000003D] := 0x00)
 WITH [0x0000003E] := 0x00)
 WITH [0x0000003F] := 0x00)
 WITH [0x00000000] := let_k_0)
 WITH [0x00000001] := stdin8[0x00000003])
 WITH [0x00000002] := stdin8[0x00000004])
 WITH [0x00000003] := stdin8[0x00000005])
 WITH [0x00000004] := stdin8[0x00000006])
 WITH [0x00000005] := stdin8[0x00000007])
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0xAB)
 WITH [0x00000009] := 0xAB)
 WITH [0x0000000A] := 0xAB)
 WITH [0x0000000B] := 0xAB)
 WITH [0x0000000C] := 0xAB)
 WITH [0x0000000D] := 0xAB)
 WITH [0x0000000E] := 0xAB)
 WITH [0x0000000F] := 0xAB)
 WITH [0x00000010] := 0xAB)
 WITH [0x00000011] := 0xAB)
 WITH [0x00000012] := 0xAB)
 WITH [0x00000013] := 0xAB)
 WITH [0x00000014] := 0xAB)
 WITH [0x00000015] := 0xAB)
 WITH [0x00000016] := 0xAB)
 WITH [0x00000017] := 0xAB)
 WITH [0x00000018] := 0xAB)
 WITH [0x00000019] := 0xAB)
 WITH [0x0000001A] := 0xAB)
 WITH [0x0000001B] := 0xAB)
 WITH [0x0000001C] := 0xAB)
 WITH [0x0000001D] := 0xAB)
 WITH [0x0000001E] := 0xAB)
 WITH [0x0000001F] := 0xAB)
 WITH [0x00000020] := 0xAB)
 WITH [0x00000021] := 0xAB)
 WITH [0x00000022] := 0xAB)
 WITH [0x00000023] := 0xAB)
 WITH [0x00000024] := 0xAB)
 WITH [0x00000025] := 0xAB)
 WITH [0x00000026] := 0xAB)
 WITH [0x00000027] := 0xAB)
 WITH [0x00000028] := 0xAB)
 WITH [0x00000029] := 0xAB)
 WITH [0x0000002A] := 0xAB)
 WITH [0x0000002B] := 0xAB)
 WITH [0x0000002C] := 0xAB)
 WITH [0x0000002D] := 0xAB)
 WITH [0x0000002E] := 0xAB)
 WITH [0x0000002F] := 0xAB)
 WITH [0x00000030] := 0xAB)
 WITH [0x00000031] := 0xAB)
 WITH [0x00000032] := 0xAB)
 WITH [0x00000033] := 0xAB)
 WITH [0x00000034] := 0xAB)
 WITH [0x00000035] := 0xAB)
 WITH [0x00000036] := 0xAB)
 WITH [0x00000037] := 0xAB)
 WITH [0x00000038] := 0xAB)
 WITH [0x00000039] := 0xAB)
 WITH [0x0000003A] := 0xAB)
 WITH [0x0000003B] := 0xAB)
 WITH [0x0000003C] := 0xAB)
 WITH [0x0000003D] := 0xAB)
 WITH [0x0000003E] := 0xAB)
 WITH [0x0000003F] := 0xAB)
[BVPLUS(64, 
0x0000000000000001, 
IF((0x5C = let_k_0
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
[31:0]]
))  );
ASSERT( (LET let_k_0 = stdin8[0x00000002] IN 
(0x41 = ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((const_arr95103 WITH [0x00000000] := 0x00)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0x00)
 WITH [0x00000008] := 0x00)
 WITH [0x00000009] := 0x00)
 WITH [0x0000000A] := 0x00)
 WITH [0x0000000B] := 0x00)
 WITH [0x0000000C] := 0x00)
 WITH [0x0000000D] := 0x00)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x00)
 WITH [0x00000011] := 0x00)
 WITH [0x00000012] := 0x00)
 WITH [0x00000013] := 0x00)
 WITH [0x00000014] := 0x00)
 WITH [0x00000015] := 0x00)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
 WITH [0x00000018] := 0x00)
 WITH [0x00000019] := 0x00)
 WITH [0x0000001A] := 0x00)
 WITH [0x0000001B] := 0x00)
 WITH [0x0000001C] := 0x00)
 WITH [0x0000001D] := 0x00)
 WITH [0x0000001E] := 0x00)
 WITH [0x0000001F] := 0x00)
 WITH [0x00000020] := 0x00)
 WITH [0x00000021] := 0x00)
 WITH [0x00000022] := 0x00)
 WITH [0x00000023] := 0x00)
 WITH [0x00000024] := 0x00)
 WITH [0x00000025] := 0x00)
 WITH [0x00000026] := 0x00)
 WITH [0x00000027] := 0x00)
 WITH [0x00000028] := 0x00)
 WITH [0x00000029] := 0x00)
 WITH [0x0000002A] := 0x00)
 WITH [0x0000002B] := 0x00)
 WITH [0x0000002C] := 0x00)
 WITH [0x0000002D] := 0x00)
 WITH [0x0000002E] := 0x00)
 WITH [0x0000002F] := 0x00)
 WITH [0x00000030] := 0x00)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000038] := 0x00)
 WITH [0x00000039] := 0x00)
 WITH [0x0000003A] := 0x00)
 WITH [0x0000003B] := 0x00)
 WITH [0x0000003C] := 0x00)
 WITH [0x0000003D] := 0x00)
 WITH [0x0000003E] := 0x00)
 WITH [0x0000003F] := 0x00)
 WITH [0x00000000] := let_k_0)
 WITH [0x00000001] := stdin8[0x00000003])
 WITH [0x00000002] := stdin8[0x00000004])
 WITH [0x00000003] := stdin8[0x00000005])
 WITH [0x00000004] := stdin8[0x00000006])
 WITH [0x00000005] := stdin8[0x00000007])
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0xAB)
 WITH [0x00000009] := 0xAB)
 WITH [0x0000000A] := 0xAB)
 WITH [0x0000000B] := 0xAB)
 WITH [0x0000000C] := 0xAB)
 WITH [0x0000000D] := 0xAB)
 WITH [0x0000000E] := 0xAB)
 WITH [0x0000000F] := 0xAB)
 WITH [0x00000010] := 0xAB)
 WITH [0x00000011] := 0xAB)
 WITH [0x00000012] := 0xAB)
 WITH [0x00000013] := 0xAB)
 WITH [0x00000014] := 0xAB)
 WITH [0x00000015] := 0xAB)
 WITH [0x00000016] := 0xAB)
 WITH [0x00000017] := 0xAB)
 WITH [0x00000018] := 0xAB)
 WITH [0x00000019] := 0xAB)
 WITH [0x0000001A] := 0xAB)
 WITH [0x0000001B] := 0xAB)
 WITH [0x0000001C] := 0xAB)
 WITH [0x0000001D] := 0xAB)
 WITH [0x0000001E] := 0xAB)
 WITH [0x0000001F] := 0xAB)
 WITH [0x00000020] := 0xAB)
 WITH [0x00000021] := 0xAB)
 WITH [0x00000022] := 0xAB)
 WITH [0x00000023] := 0xAB)
 WITH [0x00000024] := 0xAB)
 WITH [0x00000025] := 0xAB)
 WITH [0x00000026] := 0xAB)
 WITH [0x00000027] := 0xAB)
 WITH [0x00000028] := 0xAB)
 WITH [0x00000029] := 0xAB)
 WITH [0x0000002A] := 0xAB)
 WITH [0x0000002B] := 0xAB)
 WITH [0x0000002C] := 0xAB)
 WITH [0x0000002D] := 0xAB)
 WITH [0x0000002E] := 0xAB)
 WITH [0x0000002F] := 0xAB)
 WITH [0x00000030] := 0xAB)
 WITH [0x00000031] := 0xAB)
 WITH [0x00000032] := 0xAB)
 WITH [0x00000033] := 0xAB)
 WITH [0x00000034] := 0xAB)
 WITH [0x00000035] := 0xAB)
 WITH [0x00000036] := 0xAB)
 WITH [0x00000037] := 0xAB)
 WITH [0x00000038] := 0xAB)
 WITH [0x00000039] := 0xAB)
 WITH [0x0000003A] := 0xAB)
 WITH [0x0000003B] := 0xAB)
 WITH [0x0000003C] := 0xAB)
 WITH [0x0000003D] := 0xAB)
 WITH [0x0000003E] := 0xAB)
 WITH [0x0000003F] := 0xAB)
[BVPLUS(64, 
0x0000000000000002, 
IF((0x5C = let_k_0
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
[31:0]]
))  );
ASSERT( (LET let_k_0 = stdin8[0x00000002] IN 
(0x35 = ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((const_arr95103 WITH [0x00000000] := 0x00)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0x00)
 WITH [0x00000008] := 0x00)
 WITH [0x00000009] := 0x00)
 WITH [0x0000000A] := 0x00)
 WITH [0x0000000B] := 0x00)
 WITH [0x0000000C] := 0x00)
 WITH [0x0000000D] := 0x00)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x00)
 WITH [0x00000011] := 0x00)
 WITH [0x00000012] := 0x00)
 WITH [0x00000013] := 0x00)
 WITH [0x00000014] := 0x00)
 WITH [0x00000015] := 0x00)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
 WITH [0x00000018] := 0x00)
 WITH [0x00000019] := 0x00)
 WITH [0x0000001A] := 0x00)
 WITH [0x0000001B] := 0x00)
 WITH [0x0000001C] := 0x00)
 WITH [0x0000001D] := 0x00)
 WITH [0x0000001E] := 0x00)
 WITH [0x0000001F] := 0x00)
 WITH [0x00000020] := 0x00)
 WITH [0x00000021] := 0x00)
 WITH [0x00000022] := 0x00)
 WITH [0x00000023] := 0x00)
 WITH [0x00000024] := 0x00)
 WITH [0x00000025] := 0x00)
 WITH [0x00000026] := 0x00)
 WITH [0x00000027] := 0x00)
 WITH [0x00000028] := 0x00)
 WITH [0x00000029] := 0x00)
 WITH [0x0000002A] := 0x00)
 WITH [0x0000002B] := 0x00)
 WITH [0x0000002C] := 0x00)
 WITH [0x0000002D] := 0x00)
 WITH [0x0000002E] := 0x00)
 WITH [0x0000002F] := 0x00)
 WITH [0x00000030] := 0x00)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000038] := 0x00)
 WITH [0x00000039] := 0x00)
 WITH [0x0000003A] := 0x00)
 WITH [0x0000003B] := 0x00)
 WITH [0x0000003C] := 0x00)
 WITH [0x0000003D] := 0x00)
 WITH [0x0000003E] := 0x00)
 WITH [0x0000003F] := 0x00)
 WITH [0x00000000] := let_k_0)
 WITH [0x00000001] := stdin8[0x00000003])
 WITH [0x00000002] := stdin8[0x00000004])
 WITH [0x00000003] := stdin8[0x00000005])
 WITH [0x00000004] := stdin8[0x00000006])
 WITH [0x00000005] := stdin8[0x00000007])
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0xAB)
 WITH [0x00000009] := 0xAB)
 WITH [0x0000000A] := 0xAB)
 WITH [0x0000000B] := 0xAB)
 WITH [0x0000000C] := 0xAB)
 WITH [0x0000000D] := 0xAB)
 WITH [0x0000000E] := 0xAB)
 WITH [0x0000000F] := 0xAB)
 WITH [0x00000010] := 0xAB)
 WITH [0x00000011] := 0xAB)
 WITH [0x00000012] := 0xAB)
 WITH [0x00000013] := 0xAB)
 WITH [0x00000014] := 0xAB)
 WITH [0x00000015] := 0xAB)
 WITH [0x00000016] := 0xAB)
 WITH [0x00000017] := 0xAB)
 WITH [0x00000018] := 0xAB)
 WITH [0x00000019] := 0xAB)
 WITH [0x0000001A] := 0xAB)
 WITH [0x0000001B] := 0xAB)
 WITH [0x0000001C] := 0xAB)
 WITH [0x0000001D] := 0xAB)
 WITH [0x0000001E] := 0xAB)
 WITH [0x0000001F] := 0xAB)
 WITH [0x00000020] := 0xAB)
 WITH [0x00000021] := 0xAB)
 WITH [0x00000022] := 0xAB)
 WITH [0x00000023] := 0xAB)
 WITH [0x00000024] := 0xAB)
 WITH [0x00000025] := 0xAB)
 WITH [0x00000026] := 0xAB)
 WITH [0x00000027] := 0xAB)
 WITH [0x00000028] := 0xAB)
 WITH [0x00000029] := 0xAB)
 WITH [0x0000002A] := 0xAB)
 WITH [0x0000002B] := 0xAB)
 WITH [0x0000002C] := 0xAB)
 WITH [0x0000002D] := 0xAB)
 WITH [0x0000002E] := 0xAB)
 WITH [0x0000002F] := 0xAB)
 WITH [0x00000030] := 0xAB)
 WITH [0x00000031] := 0xAB)
 WITH [0x00000032] := 0xAB)
 WITH [0x00000033] := 0xAB)
 WITH [0x00000034] := 0xAB)
 WITH [0x00000035] := 0xAB)
 WITH [0x00000036] := 0xAB)
 WITH [0x00000037] := 0xAB)
 WITH [0x00000038] := 0xAB)
 WITH [0x00000039] := 0xAB)
 WITH [0x0000003A] := 0xAB)
 WITH [0x0000003B] := 0xAB)
 WITH [0x0000003C] := 0xAB)
 WITH [0x0000003D] := 0xAB)
 WITH [0x0000003E] := 0xAB)
 WITH [0x0000003F] := 0xAB)
[BVPLUS(64, 
0x0000000000000003, 
IF((0x5C = let_k_0
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
[31:0]]
))  );
ASSERT( (LET let_k_0 = stdin8[0x00000002] IN 
(0x31 = ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((const_arr95103 WITH [0x00000000] := 0x00)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0x00)
 WITH [0x00000008] := 0x00)
 WITH [0x00000009] := 0x00)
 WITH [0x0000000A] := 0x00)
 WITH [0x0000000B] := 0x00)
 WITH [0x0000000C] := 0x00)
 WITH [0x0000000D] := 0x00)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x00)
 WITH [0x00000011] := 0x00)
 WITH [0x00000012] := 0x00)
 WITH [0x00000013] := 0x00)
 WITH [0x00000014] := 0x00)
 WITH [0x00000015] := 0x00)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
 WITH [0x00000018] := 0x00)
 WITH [0x00000019] := 0x00)
 WITH [0x0000001A] := 0x00)
 WITH [0x0000001B] := 0x00)
 WITH [0x0000001C] := 0x00)
 WITH [0x0000001D] := 0x00)
 WITH [0x0000001E] := 0x00)
 WITH [0x0000001F] := 0x00)
 WITH [0x00000020] := 0x00)
 WITH [0x00000021] := 0x00)
 WITH [0x00000022] := 0x00)
 WITH [0x00000023] := 0x00)
 WITH [0x00000024] := 0x00)
 WITH [0x00000025] := 0x00)
 WITH [0x00000026] := 0x00)
 WITH [0x00000027] := 0x00)
 WITH [0x00000028] := 0x00)
 WITH [0x00000029] := 0x00)
 WITH [0x0000002A] := 0x00)
 WITH [0x0000002B] := 0x00)
 WITH [0x0000002C] := 0x00)
 WITH [0x0000002D] := 0x00)
 WITH [0x0000002E] := 0x00)
 WITH [0x0000002F] := 0x00)
 WITH [0x00000030] := 0x00)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000038] := 0x00)
 WITH [0x00000039] := 0x00)
 WITH [0x0000003A] := 0x00)
 WITH [0x0000003B] := 0x00)
 WITH [0x0000003C] := 0x00)
 WITH [0x0000003D] := 0x00)
 WITH [0x0000003E] := 0x00)
 WITH [0x0000003F] := 0x00)
 WITH [0x00000000] := let_k_0)
 WITH [0x00000001] := stdin8[0x00000003])
 WITH [0x00000002] := stdin8[0x00000004])
 WITH [0x00000003] := stdin8[0x00000005])
 WITH [0x00000004] := stdin8[0x00000006])
 WITH [0x00000005] := stdin8[0x00000007])
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0xAB)
 WITH [0x00000009] := 0xAB)
 WITH [0x0000000A] := 0xAB)
 WITH [0x0000000B] := 0xAB)
 WITH [0x0000000C] := 0xAB)
 WITH [0x0000000D] := 0xAB)
 WITH [0x0000000E] := 0xAB)
 WITH [0x0000000F] := 0xAB)
 WITH [0x00000010] := 0xAB)
 WITH [0x00000011] := 0xAB)
 WITH [0x00000012] := 0xAB)
 WITH [0x00000013] := 0xAB)
 WITH [0x00000014] := 0xAB)
 WITH [0x00000015] := 0xAB)
 WITH [0x00000016] := 0xAB)
 WITH [0x00000017] := 0xAB)
 WITH [0x00000018] := 0xAB)
 WITH [0x00000019] := 0xAB)
 WITH [0x0000001A] := 0xAB)
 WITH [0x0000001B] := 0xAB)
 WITH [0x0000001C] := 0xAB)
 WITH [0x0000001D] := 0xAB)
 WITH [0x0000001E] := 0xAB)
 WITH [0x0000001F] := 0xAB)
 WITH [0x00000020] := 0xAB)
 WITH [0x00000021] := 0xAB)
 WITH [0x00000022] := 0xAB)
 WITH [0x00000023] := 0xAB)
 WITH [0x00000024] := 0xAB)
 WITH [0x00000025] := 0xAB)
 WITH [0x00000026] := 0xAB)
 WITH [0x00000027] := 0xAB)
 WITH [0x00000028] := 0xAB)
 WITH [0x00000029] := 0xAB)
 WITH [0x0000002A] := 0xAB)
 WITH [0x0000002B] := 0xAB)
 WITH [0x0000002C] := 0xAB)
 WITH [0x0000002D] := 0xAB)
 WITH [0x0000002E] := 0xAB)
 WITH [0x0000002F] := 0xAB)
 WITH [0x00000030] := 0xAB)
 WITH [0x00000031] := 0xAB)
 WITH [0x00000032] := 0xAB)
 WITH [0x00000033] := 0xAB)
 WITH [0x00000034] := 0xAB)
 WITH [0x00000035] := 0xAB)
 WITH [0x00000036] := 0xAB)
 WITH [0x00000037] := 0xAB)
 WITH [0x00000038] := 0xAB)
 WITH [0x00000039] := 0xAB)
 WITH [0x0000003A] := 0xAB)
 WITH [0x0000003B] := 0xAB)
 WITH [0x0000003C] := 0xAB)
 WITH [0x0000003D] := 0xAB)
 WITH [0x0000003E] := 0xAB)
 WITH [0x0000003F] := 0xAB)
[BVPLUS(64, 
0x0000000000000004, 
IF((0x5C = let_k_0
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
[31:0]]
))  );
ASSERT( (LET let_k_0 = stdin8[0x00000002] IN 
(0x32 = ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((const_arr95103 WITH [0x00000000] := 0x00)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0x00)
 WITH [0x00000005] := 0x00)
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0x00)
 WITH [0x00000008] := 0x00)
 WITH [0x00000009] := 0x00)
 WITH [0x0000000A] := 0x00)
 WITH [0x0000000B] := 0x00)
 WITH [0x0000000C] := 0x00)
 WITH [0x0000000D] := 0x00)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x00)
 WITH [0x00000011] := 0x00)
 WITH [0x00000012] := 0x00)
 WITH [0x00000013] := 0x00)
 WITH [0x00000014] := 0x00)
 WITH [0x00000015] := 0x00)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
 WITH [0x00000018] := 0x00)
 WITH [0x00000019] := 0x00)
 WITH [0x0000001A] := 0x00)
 WITH [0x0000001B] := 0x00)
 WITH [0x0000001C] := 0x00)
 WITH [0x0000001D] := 0x00)
 WITH [0x0000001E] := 0x00)
 WITH [0x0000001F] := 0x00)
 WITH [0x00000020] := 0x00)
 WITH [0x00000021] := 0x00)
 WITH [0x00000022] := 0x00)
 WITH [0x00000023] := 0x00)
 WITH [0x00000024] := 0x00)
 WITH [0x00000025] := 0x00)
 WITH [0x00000026] := 0x00)
 WITH [0x00000027] := 0x00)
 WITH [0x00000028] := 0x00)
 WITH [0x00000029] := 0x00)
 WITH [0x0000002A] := 0x00)
 WITH [0x0000002B] := 0x00)
 WITH [0x0000002C] := 0x00)
 WITH [0x0000002D] := 0x00)
 WITH [0x0000002E] := 0x00)
 WITH [0x0000002F] := 0x00)
 WITH [0x00000030] := 0x00)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000038] := 0x00)
 WITH [0x00000039] := 0x00)
 WITH [0x0000003A] := 0x00)
 WITH [0x0000003B] := 0x00)
 WITH [0x0000003C] := 0x00)
 WITH [0x0000003D] := 0x00)
 WITH [0x0000003E] := 0x00)
 WITH [0x0000003F] := 0x00)
 WITH [0x00000000] := let_k_0)
 WITH [0x00000001] := stdin8[0x00000003])
 WITH [0x00000002] := stdin8[0x00000004])
 WITH [0x00000003] := stdin8[0x00000005])
 WITH [0x00000004] := stdin8[0x00000006])
 WITH [0x00000005] := stdin8[0x00000007])
 WITH [0x00000006] := 0x00)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0xAB)
 WITH [0x00000009] := 0xAB)
 WITH [0x0000000A] := 0xAB)
 WITH [0x0000000B] := 0xAB)
 WITH [0x0000000C] := 0xAB)
 WITH [0x0000000D] := 0xAB)
 WITH [0x0000000E] := 0xAB)
 WITH [0x0000000F] := 0xAB)
 WITH [0x00000010] := 0xAB)
 WITH [0x00000011] := 0xAB)
 WITH [0x00000012] := 0xAB)
 WITH [0x00000013] := 0xAB)
 WITH [0x00000014] := 0xAB)
 WITH [0x00000015] := 0xAB)
 WITH [0x00000016] := 0xAB)
 WITH [0x00000017] := 0xAB)
 WITH [0x00000018] := 0xAB)
 WITH [0x00000019] := 0xAB)
 WITH [0x0000001A] := 0xAB)
 WITH [0x0000001B] := 0xAB)
 WITH [0x0000001C] := 0xAB)
 WITH [0x0000001D] := 0xAB)
 WITH [0x0000001E] := 0xAB)
 WITH [0x0000001F] := 0xAB)
 WITH [0x00000020] := 0xAB)
 WITH [0x00000021] := 0xAB)
 WITH [0x00000022] := 0xAB)
 WITH [0x00000023] := 0xAB)
 WITH [0x00000024] := 0xAB)
 WITH [0x00000025] := 0xAB)
 WITH [0x00000026] := 0xAB)
 WITH [0x00000027] := 0xAB)
 WITH [0x00000028] := 0xAB)
 WITH [0x00000029] := 0xAB)
 WITH [0x0000002A] := 0xAB)
 WITH [0x0000002B] := 0xAB)
 WITH [0x0000002C] := 0xAB)
 WITH [0x0000002D] := 0xAB)
 WITH [0x0000002E] := 0xAB)
 WITH [0x0000002F] := 0xAB)
 WITH [0x00000030] := 0xAB)
 WITH [0x00000031] := 0xAB)
 WITH [0x00000032] := 0xAB)
 WITH [0x00000033] := 0xAB)
 WITH [0x00000034] := 0xAB)
 WITH [0x00000035] := 0xAB)
 WITH [0x00000036] := 0xAB)
 WITH [0x00000037] := 0xAB)
 WITH [0x00000038] := 0xAB)
 WITH [0x00000039] := 0xAB)
 WITH [0x0000003A] := 0xAB)
 WITH [0x0000003B] := 0xAB)
 WITH [0x0000003C] := 0xAB)
 WITH [0x0000003D] := 0xAB)
 WITH [0x0000003E] := 0xAB)
 WITH [0x0000003F] := 0xAB)
[BVPLUS(64, 
0x0000000000000005, 
IF((0x5C = let_k_0
))
THEN 0x0000000000000001
ELSE 0x0000000000000000
ENDIF)
[31:0]]
))  );
%----------------------------------------------------
QUERY( FALSE  );
