array A-data-stat[144] : w32 -> w8 = symbolic
array B-data-stat[144] : w32 -> w8 = symbolic
array arg00[11] : w32 -> w8 = symbolic
array arg01[11] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
array model_version[4] : w32 -> w8 = symbolic
array n_args[4] : w32 -> w8 = symbolic
array stdin-stat[144] : w32 -> w8 = symbolic
array stdout-stat[144] : w32 -> w8 = symbolic
(query [(Ult N0:(ReadLSB w32 0 n_args)
              4)
         (Slt 0 N0)
         (Eq false (Eq 1 N0))
         (Eq false (Eq 2 N0))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A-data-stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 A-data-stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 B-data-stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 B-data-stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin-stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdin-stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdout-stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdout-stat)
              65536)
         (Eq 1
             (ReadLSB w32 0 model_version))
         (Eq false
             (Eq 45 N1:(Read w8 0 arg00)))
         (Eq false (Eq 0 N1))
         (Eq false (Eq 92 N1))
         (Eq false (Eq 37 N1))
         (Eq false
             (Eq 0 N2:(Read w8 1 arg00)))
         (Eq false (Eq 92 N2))
         (Eq false (Eq 37 N2))
         (Eq false
             (Eq 0 N3:(Read w8 2 arg00)))
         (Eq false (Eq 92 N3))
         (Eq false (Eq 37 N3))
         (Eq false
             (Eq 0 N4:(Read w8 3 arg00)))
         (Eq false (Eq 92 N4))
         (Eq false (Eq 37 N4))
         (Eq false
             (Eq 0 N5:(Read w8 4 arg00)))
         (Eq false (Eq 92 N5))
         (Eq false (Eq 37 N5))
         (Eq false
             (Eq 0 N6:(Read w8 5 arg00)))
         (Eq false (Eq 92 N6))
         (Eq false (Eq 37 N6))
         (Eq false
             (Eq 0 N7:(Read w8 6 arg00)))
         (Eq false (Eq 92 N7))
         (Eq false (Eq 37 N7))
         (Eq false
             (Eq 0 N8:(Read w8 7 arg00)))
         (Eq false (Eq 92 N8))
         (Eq false (Eq 37 N8))
         (Eq false
             (Eq 0 N9:(Read w8 8 arg00)))
         (Eq false (Eq 92 N9))
         (Eq false (Eq 37 N9))
         (Eq false
             (Eq 0 N10:(Read w8 9 arg00)))
         (Eq false (Eq 92 N10))
         (Eq false (Eq 37 N10))
         (Eq false
             (Eq 0 N11:(Read w8 0 arg01)))
         (Eq false (Eq 39 N11))
         (Eq false (Eq 56 N11))
         (Eq false (Eq 57 N11))
         (Eq false (Eq 58 N11))
         (Eq false (Eq 59 N11))
         (Eq false (Eq 60 N11))
         (Eq false (Eq 61 N11))
         (Eq false (Eq 62 N11))
         (Eq false (Eq 63 N11))
         (Eq false (Eq 48 N11))
         (Eq false (Eq 49 N11))
         (Eq false (Eq 50 N11))
         (Eq false (Eq 51 N11))
         (Eq false (Eq 52 N11))
         (Eq false (Eq 53 N11))
         (Eq false (Eq 54 N11))
         (Eq false (Eq 55 N11))
         (Eq false (Eq 40 N11))
         (Eq false (Eq 41 N11))
         (Eq false (Eq 42 N11))
         (Eq false (Eq 43 N11))
         (Eq false (Eq 44 N11))
         (Eq false (Eq 45 N11))
         (Eq false (Eq 46 N11))
         (Eq false (Eq 47 N11))
         (Eq false (Eq 32 N11))
         (Eq false (Eq 33 N11))
         (Eq false (Eq 34 N11))
         (Eq false (Eq 35 N11))
         (Eq false (Eq 36 N11))
         (Eq false (Eq 37 N11))
         (Eq false (Eq 38 N11))
         (Eq false (Eq 8 N11))
         (Eq false (Eq 9 N11))
         (Eq false (Eq 10 N11))
         (Eq false (Eq 11 N11))
         (Eq false (Eq 12 N11))
         (Eq false (Eq 13 N11))
         (Eq false (Eq 7 N11))
         (Eq false (Eq 120 N11))
         (Eq false (Eq 121 N11))
         (Eq false (Eq 122 N11))
         (Eq false (Eq 123 N11))
         (Eq false (Eq 124 N11))
         (Eq false (Eq 125 N11))
         (Eq false (Eq 126 N11))
         (Eq false (Eq 112 N11))
         (Eq false (Eq 113 N11))
         (Eq false (Eq 114 N11))
         (Eq false (Eq 115 N11))
         (Eq false (Eq 116 N11))
         (Eq false (Eq 117 N11))
         (Eq false (Eq 118 N11))
         (Eq false (Eq 119 N11))
         (Eq false (Eq 104 N11))
         (Eq false (Eq 105 N11))
         (Eq false (Eq 106 N11))
         (Eq false (Eq 107 N11))
         (Eq false (Eq 108 N11))
         (Eq false (Eq 109 N11))
         (Eq false (Eq 110 N11))
         (Eq false (Eq 111 N11))
         (Eq false (Eq 96 N11))
         (Eq false (Eq 97 N11))
         (Eq false (Eq 98 N11))
         (Eq false (Eq 99 N11))
         (Eq false (Eq 100 N11))
         (Eq false (Eq 101 N11))
         (Eq false (Eq 102 N11))
         (Eq false (Eq 103 N11))
         (Eq false (Eq 88 N11))
         (Eq false (Eq 89 N11))
         (Eq false (Eq 90 N11))
         (Eq false (Eq 91 N11))
         (Eq false (Eq 92 N11))
         (Eq false (Eq 93 N11))
         (Eq false (Eq 94 N11))
         (Eq false (Eq 95 N11))
         (Eq false (Eq 80 N11))
         (Eq false (Eq 81 N11))
         (Eq false (Eq 82 N11))
         (Eq false (Eq 83 N11))
         (Eq false (Eq 84 N11))
         (Eq false (Eq 85 N11))
         (Eq false (Eq 86 N11))
         (Eq false (Eq 87 N11))
         (Eq false (Eq 72 N11))
         (Eq false (Eq 73 N11))
         (Eq false (Eq 74 N11))
         (Eq false (Eq 75 N11))
         (Eq false (Eq 76 N11))
         (Eq false (Eq 77 N11))
         (Eq false (Eq 78 N11))
         (Eq false (Eq 79 N11))
         (Eq false (Eq 65 N11))
         (Eq false (Eq 66 N11))
         (Eq false (Eq 67 N11))
         (Eq false (Eq 68 N11))
         (Eq false (Eq 69 N11))
         (Eq false (Eq 70 N11))
         (Eq false (Eq 71 N11))
         (Eq false
             (Eq 0
                 (And w8 (And w8 (Extract w8 0 (LShr w16 (ReadLSB w16 N12:(Extract w32 0 (Add w64 256
                                                                                                  (Mul w64 2 (ZExt w64 N11)))) const_arr1)
                                                         14))
                                 1)
                         1)))
         (Eq 0 (Read w8 1 arg01))]
        false)
