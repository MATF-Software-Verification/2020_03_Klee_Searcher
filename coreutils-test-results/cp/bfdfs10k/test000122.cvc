n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A-data-stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin-stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdout-stat4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
model_version5  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg006  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr310  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr411  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr613  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr714  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr815  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr916  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1118  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1219  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1320  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1421  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1522  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1623  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1724  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1825  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1926  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2128  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2229  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2330  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2431  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2532  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2633  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2834  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2935  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3036  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3137  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3238  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3339  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg0040  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg0241  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3442  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3543  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3644  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3745  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3846  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3947  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4048  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4149  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4250  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4351  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4452  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4553  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4654  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4755  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4856  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4957  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5058  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5159  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5260  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5361  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5462  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5563  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5664  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5765  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5866  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5967  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6068  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6169  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6270  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6371  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6472  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6573  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6674  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6775  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6876  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6977  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7078  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7179  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7280  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7381  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7482  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7583  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7684  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7785  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7886  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7987  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8088  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8289  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8390  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8491  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8692  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8793  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8894  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8995  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9096  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9197  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9298  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9399  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr94100  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr95101  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr96102  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr99103  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr100104  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr101105  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr102106  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr103107  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr104108  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr105109  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr106110  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr107111  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr108112  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr109113  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr110114  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr111115  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr112116  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr113117  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr114118  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr115119  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr116120  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr117121  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr118122  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr119123  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr120124  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr121125  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr122126  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr123127  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr124128  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr125129  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr126130  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr127131  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr128132  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr129133  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr130134  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr131135  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr132136  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr133137  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr134138  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr135139  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr136140  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr137141  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr138142  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr139143  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr140144  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr141145  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr142146  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr143147  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr144148  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr145149  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr146150  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr147151  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr148152  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr149153  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr150154  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr151155  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr152156  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr153157  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr154158  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr155159  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr156160  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr157161  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr158162  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr159163  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A-data-stat2[0x0000000B] @ (A-data-stat2[0x0000000A] @ (A-data-stat2[0x00000009] @ A-data-stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A-data-stat2[0x0000003F] @ (A-data-stat2[0x0000003E] @ (A-data-stat2[0x0000003D] @ (A-data-stat2[0x0000003C] @ (A-data-stat2[0x0000003B] @ (A-data-stat2[0x0000003A] @ (A-data-stat2[0x00000039] @ A-data-stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin-stat3[0x0000000B] @ (stdin-stat3[0x0000000A] @ (stdin-stat3[0x00000009] @ stdin-stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin-stat3[0x0000003F] @ (stdin-stat3[0x0000003E] @ (stdin-stat3[0x0000003D] @ (stdin-stat3[0x0000003C] @ (stdin-stat3[0x0000003B] @ (stdin-stat3[0x0000003A] @ (stdin-stat3[0x00000039] @ stdin-stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdout-stat4[0x0000000B] @ (stdout-stat4[0x0000000A] @ (stdout-stat4[0x00000009] @ stdout-stat4[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdout-stat4[0x0000003F] @ (stdout-stat4[0x0000003E] @ (stdout-stat4[0x0000003D] @ (stdout-stat4[0x0000003C] @ (stdout-stat4[0x0000003B] @ (stdout-stat4[0x0000003A] @ (stdout-stat4[0x00000039] @ stdout-stat4[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ((((0x01 = model_version5[0x00000000]
) AND (0x00 = model_version5[0x00000001]
)
) AND (0x00 = model_version5[0x00000002]
)
) AND (0x00 = model_version5[0x00000003]
)
) );
ASSERT( (0x2D = arg0040[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg0040[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg0040[0x00000001]
))) );
ASSERT( (0x54 = BVSX(arg0040[0x00000001],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg0040[0x00000002]
))) );
ASSERT( (0x54 = BVSX(arg0040[0x00000002],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg0040[0x00000003]
))) );
ASSERT( (0x54 = BVSX(arg0040[0x00000003],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg0040[0x00000004]
))) );
ASSERT( (0x54 = BVSX(arg0040[0x00000004],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg0040[0x00000005]
))) );
ASSERT( (0x54 = BVSX(arg0040[0x00000005],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg0040[0x00000006]
))) );
ASSERT( (0x54 = BVSX(arg0040[0x00000006],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg0040[0x00000007]
))) );
ASSERT( (0x54 = BVSX(arg0040[0x00000007],32)
[7:0]
) );
ASSERT( ( NOT( (0x00 = arg0040[0x00000008]
))) );
ASSERT( (0x74 = BVSX(arg0040[0x00000008],32)
[7:0]
) );
ASSERT( (0x41 = arg0040[0x00000009]
) );
ASSERT( (LET let_k_0 = ((((((((((((((((((((((((const_arr3543 WITH [0x00000000] := 0x08)
 WITH [0x00000001] := 0x00)
 WITH [0x00000002] := 0x00)
 WITH [0x00000003] := 0x00)
 WITH [0x00000004] := 0xAB)
 WITH [0x00000005] := 0xAB)
 WITH [0x00000006] := 0xAB)
 WITH [0x00000007] := 0xAB)
 WITH [0x00000008] := 0x68)
 WITH [0x00000009] := 0x0C)
 WITH [0x0000000A] := 0x2B)
 WITH [0x0000000B] := 0x67)
 WITH [0x0000000C] := 0xC3)
 WITH [0x0000000D] := 0x55)
 WITH [0x0000000E] := 0x00)
 WITH [0x0000000F] := 0x00)
 WITH [0x00000010] := 0x10)
 WITH [0x00000011] := 0xEE)
 WITH [0x00000012] := 0x08)
 WITH [0x00000013] := 0x66)
 WITH [0x00000014] := 0xC3)
 WITH [0x00000015] := 0x55)
 WITH [0x00000016] := 0x00)
 WITH [0x00000017] := 0x00)
,
let_k_1 = BVPLUS(64, 
0xFFFFAA3C987FD450, 
IF(((((((((0x00 = A-data-stat2[0x00000008]
) AND (0x00 = A-data-stat2[0x00000009]
)
) AND (0x00 = A-data-stat2[0x0000000A]
)
) AND (0x00 = A-data-stat2[0x0000000B]
)
) AND (0x00 = A-data-stat2[0x0000000C]
)
) AND (0x00 = A-data-stat2[0x0000000D]
)
) AND (0x00 = A-data-stat2[0x0000000E]
)
) AND (0x00 = A-data-stat2[0x0000000F]
)
))
THEN 0x0000000000000000
ELSE 0x000055C367802BC0
ENDIF)
[31:0] IN 
(0x4 = ((((((((((((((((A-data-stat2 WITH [0x00000030] := 0x08)
 WITH [0x00000031] := 0x00)
 WITH [0x00000032] := 0x00)
 WITH [0x00000033] := 0x00)
 WITH [0x00000034] := 0x00)
 WITH [0x00000035] := 0x00)
 WITH [0x00000036] := 0x00)
 WITH [0x00000037] := 0x00)
 WITH [0x00000040] := 0x08)
 WITH [0x00000041] := 0x00)
 WITH [0x00000042] := 0x00)
 WITH [0x00000043] := 0x00)
 WITH [0x00000044] := 0x00)
 WITH [0x00000045] := 0x00)
 WITH [0x00000046] := 0x00)
 WITH [0x00000047] := 0x00)
[BVPLUS(64, 
0xFFFFAA3C99F71209, 
(let_k_0[BVPLUS(32, 
0x00000007, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000006, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000005, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000004, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000003, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000002, 
let_k_1)
] @ (let_k_0[BVPLUS(32, 
0x00000001, 
let_k_1)
] @ let_k_0[let_k_1]
)
)
)
)
)
)
))
[31:0]][7:4]
))  );
ASSERT( (0x2D = arg017[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg017[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg017[0x00000001]
))) );
ASSERT( (0x74 = BVSX(arg017[0x00000001],32)
[7:0]
) );
%----------------------------------------------------
QUERY( FALSE  );
