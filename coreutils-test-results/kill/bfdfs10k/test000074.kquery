array A-data-stat[144] : w32 -> w8 = symbolic
array arg00[11] : w32 -> w8 = symbolic
array arg01[11] : w32 -> w8 = symbolic
array arg02[11] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
array model_version[4] : w32 -> w8 = symbolic
array n_args[4] : w32 -> w8 = symbolic
array stdin-stat[144] : w32 -> w8 = symbolic
array stdout-stat[144] : w32 -> w8 = symbolic
(query [(Ult N0:(ReadLSB w32 0 n_args)
              4)
         (Slt 0 N0)
         (Eq false (Eq 1 N0))
         (Eq false (Eq 2 N0))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A-data-stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 A-data-stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin-stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdin-stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdout-stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdout-stat)
              65536)
         (Eq 1
             (ReadLSB w32 0 model_version))
         (Eq false
             (Eq 45 (Read w8 0 arg00)))
         (Eq 45 (Read w8 0 arg01))
         (Eq false
             (Eq 0 N1:(Read w8 1 arg01)))
         (Eq false (Eq 45 N1))
         (Eq 108
             (Extract w8 0 (SExt w32 N1)))
         (Eq false
             (Eq 0 N2:(Read w8 2 arg01)))
         (Eq 57
             (Extract w8 0 (SExt w32 N2)))
         (Eq false
             (Eq 0 N3:(Read w8 3 arg01)))
         (Eq 0 (Read w8 4 arg01))
         (Eq false
             (Eq 97
                 N4:(Extract w8 0 (SExt w32 N3))))
         (Eq false (Eq 98 N4))
         (Eq false (Eq 99 N4))
         (Eq false (Eq 100 N4))
         (Eq false (Eq 101 N4))
         (Eq false (Eq 102 N4))
         (Eq false (Eq 103 N4))
         (Eq false (Eq 104 N4))
         (Eq false (Eq 105 N4))
         (Eq false (Eq 106 N4))
         (Eq false (Eq 107 N4))
         (Eq false (Eq 108 N4))
         (Eq false (Eq 109 N4))
         (Eq false (Eq 110 N4))
         (Eq false (Eq 111 N4))
         (Eq false (Eq 112 N4))
         (Eq false (Eq 113 N4))
         (Eq false (Eq 114 N4))
         (Eq false (Eq 115 N4))
         (Eq false (Eq 116 N4))
         (Eq false (Eq 117 N4))
         (Eq false (Eq 118 N4))
         (Eq false (Eq 119 N4))
         (Eq false (Eq 120 N4))
         (Eq false (Eq 121 N4))
         (Eq false (Eq 122 N4))
         (Eq false (Eq 39 N3))
         (Eq false (Eq 56 N3))
         (Eq false (Eq 57 N3))
         (Eq false (Eq 58 N3))
         (Eq false (Eq 59 N3))
         (Eq false (Eq 60 N3))
         (Eq false (Eq 61 N3))
         (Eq false (Eq 62 N3))
         (Eq false (Eq 63 N3))
         (Eq false (Eq 48 N3))
         (Eq false (Eq 49 N3))
         (Eq false (Eq 50 N3))
         (Eq false (Eq 51 N3))
         (Eq false (Eq 52 N3))
         (Eq false (Eq 53 N3))
         (Eq false (Eq 54 N3))
         (Eq false (Eq 55 N3))
         (Eq false (Eq 40 N3))
         (Eq false (Eq 41 N3))
         (Eq false (Eq 42 N3))
         (Eq false (Eq 43 N3))
         (Eq false (Eq 44 N3))
         (Eq false (Eq 45 N3))
         (Eq false (Eq 46 N3))
         (Eq false (Eq 47 N3))
         (Eq false (Eq 32 N3))
         (Eq false (Eq 33 N3))
         (Eq false (Eq 34 N3))
         (Eq false (Eq 35 N3))
         (Eq false (Eq 36 N3))
         (Eq false (Eq 37 N3))
         (Eq false (Eq 38 N3))
         (Eq false (Eq 8 N3))
         (Eq false (Eq 9 N3))
         (Eq false (Eq 10 N3))
         (Eq false (Eq 11 N3))
         (Eq false (Eq 12 N3))
         (Eq false (Eq 13 N3))
         (Eq false (Eq 7 N3))
         (Eq false (Eq 120 N3))
         (Eq false (Eq 121 N3))
         (Eq false (Eq 122 N3))
         (Eq false (Eq 123 N3))
         (Eq false (Eq 124 N3))
         (Eq false (Eq 125 N3))
         (Eq false (Eq 126 N3))
         (Eq false (Eq 112 N3))
         (Eq false (Eq 113 N3))
         (Eq false (Eq 114 N3))
         (Eq false (Eq 115 N3))
         (Eq false (Eq 116 N3))
         (Eq false (Eq 117 N3))
         (Eq false (Eq 118 N3))
         (Eq false (Eq 119 N3))
         (Eq false (Eq 104 N3))
         (Eq false (Eq 105 N3))
         (Eq false (Eq 106 N3))
         (Eq false (Eq 107 N3))
         (Eq false (Eq 108 N3))
         (Eq false (Eq 109 N3))
         (Eq false (Eq 110 N3))
         (Eq false (Eq 111 N3))
         (Eq false (Eq 96 N3))
         (Eq false (Eq 97 N3))
         (Eq false (Eq 98 N3))
         (Eq false (Eq 99 N3))
         (Eq false (Eq 100 N3))
         (Eq false (Eq 101 N3))
         (Eq false (Eq 102 N3))
         (Eq false (Eq 103 N3))
         (Eq false (Eq 88 N3))
         (Eq false (Eq 89 N3))
         (Eq false (Eq 90 N3))
         (Eq false (Eq 91 N3))
         (Eq false (Eq 92 N3))
         (Eq false (Eq 93 N3))
         (Eq false (Eq 94 N3))
         (Eq false (Eq 95 N3))
         (Eq false (Eq 80 N3))
         (Eq false (Eq 81 N3))
         (Eq false (Eq 82 N3))
         (Eq false (Eq 83 N3))
         (Eq false (Eq 84 N3))
         (Eq false (Eq 85 N3))
         (Eq false (Eq 86 N3))
         (Eq false (Eq 87 N3))
         (Eq false (Eq 72 N3))
         (Eq false (Eq 73 N3))
         (Eq false (Eq 74 N3))
         (Eq false (Eq 75 N3))
         (Eq false (Eq 76 N3))
         (Eq false (Eq 77 N3))
         (Eq false (Eq 78 N3))
         (Eq false (Eq 79 N3))
         (Eq false (Eq 65 N3))
         (Eq false (Eq 66 N3))
         (Eq false (Eq 67 N3))
         (Eq false (Eq 68 N3))
         (Eq false (Eq 69 N3))
         (Eq false (Eq 70 N3))
         (Eq false (Eq 71 N3))
         (Eq false
             (Eq 0
                 (And w8 (And w8 (Extract w8 0 (LShr w16 (ReadLSB w16 N5:(Extract w32 0 (Add w64 256
                                                                                                 (Mul w64 2 (ZExt w64 N3)))) const_arr1)
                                                         14))
                                 1)
                         1)))
         (Ult (Add w32 4294967248
                       (SExt w32 N6:(Read w8 0 arg02)))
              10)
         (Eq false (Eq 43 N6))
         (Eq false (Eq 45 N6))]
        false)
